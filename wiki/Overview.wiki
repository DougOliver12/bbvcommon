#summary Overview
#labels Featured

bbv.Common consists of several mostly independent components developed at [http://www.bbv.ch bbv Software Services AG]:

= bbv.Common =

|| *Events* || ||
|| EventBroker || Notification component for synchronous and asynchronous loosly coupled notification with automatic thread switching ||
|| generic event arguments || ||
|| !EventFilter || event filter to aggregate and delay frequently occurring events (e.g. file changes) ||

|| *State Machine* || ||
|| StateMachine || hierarchical state machine with fluent definition syntax ||

|| *Asynchronous Operations* || ||
|| !AsyncResult || implementation for IAsyncResult to execute asynchonous operations ||
|| !AsyncWorker || extends BackgroundWorker with exception handling that does not swallow exception and simpler usage within code. ||
|| AsyncModule || Provide an easy way to a multithreaded application. Arbitrary objects can be extended with one or more worker threads and message queues to perform asynchronous tasks ||
|| !UserInterfaceThreadSynchronizer || simple to use thread switcher to execute operations synchronously or asynchronously on user interface thread (WinForms, WPF and ASP.NET) ||

|| *Rule Engine* ||
|| !RuleEngine || foundation for evaluating rules: Single entry point for checking rules, Loosely coupled, Context based rule sets. ||

|| *Test Utilities* || ||
|| !EventTester / EventTestList || simplifies testing of event invocations (automatic registration and deregistration, invocation count test, ...) ||
|| !Log4NetHelper || test log messages ||

|| *csv* || ||
|| !CsvParser / Writer || Parser and Writer for .csv (comma separated values) files. ||

|| *IO* || ||
|| !TextFileReader / !TextFileWriter || wrapper for files access to enable unit testing ||
|| !TemporaryFileHolder || manages temporarily needed files (automatic deletion) ||
|| !FileActionCommand || Execute commands recursively on the file system: Get all files, move files, number of folders and files, extensible with custom commands. ||
|| !FileSystemHelper / !DriveUtilities || Provides information about the file system and drives |||

|| *Streams* || ||
|| !StreamHelper || Provides functionality for manipulating streams (copy and compare). ||
|| !StreamLoggerStream / !StreamDecoratorStream || stream decorators for logging or generic use. ||

|| *Miscellaneous* || ||
|| !ApplicationHelper || Provides functionality to check whether application is already running and optionally switch to running instance. ||
|| !HighResolutionStopWatch || StopWatch that uses processor ticks for high resolution timing. ||
|| !FormatHelper || String.Format replacement that does not crash if too few arguments are defined but returns an error string. ||
|| !StringTruncationFormatter || Format provider for formatting string with a maximal length. |
|| Resources || resource loaders to load data from file system or embedded resources ||
|| HashService || Provides MD5 and SHA1 hashing. ||
|| !WindowsHelper || Provides shutdown and logoff functionality. ||

= Obsolete Components =
= ASP.NET =

==Caching==
Provides centralized access to the ASP.Net Cache. 

The default caching behaviour is to cache the data for the duration of the page request. It is possible to set the duration of caching in the configuration file. The key in the configuration file has to match the main key under which the object is stored in the cache.

To distinguish between different cached objects of the same main key, a subkey can be defined. That means the main key is used to define the duration of the caching and the combination of the main and subkey is used to identify the object in the cache.

==Exceptions==
Provides components for simple exception handling and visualization

==UI==
Helper components for ASP.NET user interface interaction
 * GridViewSortExtender 
  Adds an image to the sort column indicating sort direction.
 * ControlHelper, DropDownListHelper, GridViewHelper, TextControlHelper 
  Functionality to manipulate controls.