#summary specification for the state machine
#labels StateMachine
 
<h1>
    bbv.Common.StateMachine.Specification
</h1>
<h2 class="count">
  5 concerns,
  28 contexts,
  66 specifications
</h2>

  <hr/>
  <hr/>
<h2 class="concern">
  Entry and exit actions specifications
</h2>
<h3 class="count">
  8 contexts, 12 specifications
</h3><h3 class="context">
  When an entry action of several entry actions throws an exception
</h3>
<h4 class="count">
  2 specifications
</h4><ul><li class="spec"><a name="5">should execute all entry actions on entry</a>







          </li><li class="spec"><a name="6">should handle all exceptions of all throwing entry actions</a>





 

          </li>
        </ul><h3 class="context">
  When an exit action of several exit actions throws an exception
</h3>
<h4 class="count">
  2 specifications
</h4><ul><li class="spec"><a name="11">should execute all exit actions on exit</a>





 

          </li><li class="spec"><a name="12">should handle all exceptions of all throwing exit actions</a>





 

          </li>
        </ul><h3 class="context">
  When defining an entry action
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="1">should execute entry action on entry</a>





 

          </li>
        </ul><h3 class="context">
  When defining an entry action with parameter
</h3>
<h4 class="count">
  2 specifications
</h4><ul><li class="spec"><a name="2">should execute entry action on entry</a>





 

          </li><li class="spec"><a name="3">should pass parameter to entry action</a>





 

          </li>
        </ul><h3 class="context">
  When defining an exit action
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="7">should execute exit action on exit</a>





 

          </li>
        </ul><h3 class="context">
  When defining an exit action with parameter
</h3>
<h4 class="count">
  2 specifications
</h4><ul><li class="spec"><a name="8">should execute exit action on exit</a>





 

          </li><li class="spec"><a name="9">should pass parameter to exit action</a>





 

          </li>
        </ul><h3 class="context">
  When defining multiple entry actions
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="4">should execute all entry actions on entry</a>





 

          </li>
        </ul><h3 class="context">
  When defining multiple exit actions
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="10">should execute all exit actions on exit</a>





 

          </li>
        </ul><h2 class="concern">
  Exception Handling specifications
</h2>
<h3 class="count">
  7 contexts, 28 specifications
</h3><h3 class="context">
  When a guard in a transition throws an exception
</h3>
<h4 class="count">
  6 specifications
</h4><ul><li class="spec"><a name="31">should catch exception and fire transition exception event</a>





 

          </li><li class="spec"><a name="32">should pass source state of failing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="33">should pass event id causing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="34">should pass thrown exception to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="35">should pass event parameters to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="36">should not fire exception thrown event</a>





 

          </li>
        </ul><h3 class="context">
  When a transition action throws an exception
</h3>
<h4 class="count">
  6 specifications
</h4><ul><li class="spec"><a name="13">should catch exception and fire transition exception event</a>





 

          </li><li class="spec"><a name="14">should pass source state of failing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="15">should pass event id causing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="16">should pass thrown exception to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="17">should pass event parameters to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="18">should not fire exception thrown event</a>





 

          </li>
        </ul><h3 class="context">
  When an entry action in a transition throws an exception
</h3>
<h4 class="count">
  6 specifications
</h4><ul><li class="spec"><a name="19">should catch exception and fire transition exception event</a>





 

          </li><li class="spec"><a name="20">should pass source state of failing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="21">should pass event id causing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="22">should pass thrown exception to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="23">should pass event parameters to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="24">should not fire exception thrown event</a>





 

          </li>
        </ul><h3 class="context">
  When an exit action in a transition throws an exception
</h3>
<h4 class="count">
  6 specifications
</h4><ul><li class="spec"><a name="25">should catch exception and fire transition exception event</a>





 

          </li><li class="spec"><a name="26">should pass source state of failing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="27">should pass event id causing transition to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="28">should pass thrown exception to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="29">should pass event parameters to event arguments of transition exception event</a>





 

          </li><li class="spec"><a name="30">should not fire exception thrown event</a>





 

          </li>
        </ul><h3 class="context">
  When exception is thrown and no exception even handler is registered
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="40">should throw exception</a>





 

          </li>
        </ul><h3 class="context">
  When initializing the state machine and an entry action throws an exception
</h3>
<h4 class="count">
  2 specifications
</h4><ul><li class="spec"><a name="37">should fire exception throw event</a>





 

          </li><li class="spec"><a name="38">should pass thrown exception to event arguments of exception thrown event</a>





 

          </li>
        </ul><h3 class="context">
  When transition throws exception and no transition exception even handler is registered
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="39">should throw exception</a>





 

          </li>
        </ul><h2 class="concern">
  Execute transition specifications
</h2>
<h3 class="count">
  5 contexts, 13 specifications
</h3><h3 class="context">
  When firing an event onto a started hierarchical state machine with source and destination having a common ancestor
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="54">should remain inside common ancestor state</a>





 

          </li>
        </ul><h3 class="context">
  When firing an event onto a started hierarchical state machine with source and destination having different parents
</h3>
<h4 class="count">
  5 specifications
</h4><ul><li class="spec"><a name="49">should execute exit action of source state</a>





 

          </li><li class="spec"><a name="50">should execute exit action of parent of source state</a>





 

          </li><li class="spec"><a name="51">should execute entry action of parent of destination state</a>





 

          </li><li class="spec"><a name="52">should execute entry action of destination state</a>





 

          </li><li class="spec"><a name="53">should execute actions from source upwards and then downwards to destination state</a>





 

          </li>
        </ul><h3 class="context">
  When firing an event onto a started state machine
</h3>
<h4 class="count">
  5 specifications
</h4><ul><li class="spec"><a name="62">should execute transition by switching state</a>





 

          </li><li class="spec"><a name="63">should execute transition actions</a>





 

          </li><li class="spec"><a name="64">should pass parameters to transition action</a>





 

          </li><li class="spec"><a name="65">should execute exit action of source state</a>





 

          </li><li class="spec"><a name="66">should execute entry action of destination state</a>





 

          </li>
        </ul><h3 class="context">
  When firing an event onto a started state machine with guarded transitions
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="41">should take transition guarded with first matching guard</a>





 

          </li>
        </ul><h3 class="context">
  When firing an event onto a started state machine with otherwise guard and no matching guard
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="42">should take transition guarded with otherwise</a>





 

          </li>
        </ul><h2 class="concern">
  Initialize state machine specifications
</h2>
<h3 class="count">
  6 contexts, 11 specifications
</h3><h3 class="context">
  When an already initialized state machine is initialized
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="58">should throw an invalid operation exception</a>





 

          </li>
        </ul><h3 class="context">
  When an initialized state machine is started
</h3>
<h4 class="count">
  2 specifications
</h4><ul><li class="spec"><a name="55">should set current state of state machine to state to which it is initialized</a>





 

          </li><li class="spec"><a name="56">should execute entry action of state to which state machine is initialized</a>





 

          </li>
        </ul><h3 class="context">
  When an state machine is initialized
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="57">should not yet execute any entry actions</a>





 

          </li>
        </ul><h3 class="context">
  When an uninitialized state machine is started
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="59">should throw an invalid operation exception</a>





 

          </li>
        </ul><h3 class="context">
  When initializing to a super state of a hierarchical state machine
</h3>
<h4 class="count">
  3 specifications
</h4><ul><li class="spec"><a name="46">should set current state of state machine to initial leaf state of the state to which it is initialized</a>





 

          </li><li class="spec"><a name="47">should execute entry action of super state to which state machine is initialized</a>





 

          </li><li class="spec"><a name="48">should execute entry actions of initial sub states until a leaf state is reached</a>





 

          </li>
        </ul><h3 class="context">
  When initializing to leaf state of a hierarchical state machine
</h3>
<h4 class="count">
  3 specifications
</h4><ul><li class="spec"><a name="43">should set current state of state machine to state to which it is initialized</a>





 

          </li><li class="spec"><a name="44">should execute entry action of state to which state machine is initialized</a>





 

          </li><li class="spec"><a name="45">should execute entry action of super states of the state to which state machine is initialized</a>





 

          </li>
        </ul><h2 class="concern">
  Start and stop state machine specifications
</h2>
<h3 class="count">
  2 contexts, 2 specifications
</h3><h3 class="context">
  When starting an initialized state machine
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="60">should execute queued events</a>





 

          </li>
        </ul><h3 class="context">
  When stopping a running state machine
</h3>
<h4 class="count">
  1 specification
</h4><ul><li class="spec"><a name="61">should queue events</a>





 

          </li>
        </ul>
    <hr/>