#summary Bootstrapper provides a simple and flexible way to make your application's startup and shutdown behavior pluggable and extendable.

= Features =

   * The bootstrapper provides a single entry point to startup and shutdown the application.
   * Fluent definition syntax allowing to expressively define the startup and shutdown behavior of the application.
   * Pluggable behaviors which allow to extend the bootstrapping mechanism in AOP like style.
   * ConfigurationSection support with behavior.
   * Unobtrusive Key/Value pair configuration section support with behavior.
   * Thorough reporting of application startup and shutdown behavior.

_For a quick introduction see the [BootstrapperTutorial Tutorial]._

_For the specification see the [BootstrapperSpecification Specification]_

= Documentation =
== Bootstrapper ==
When building a new application the bootstrapper is essentially the only root object which needs to be instantiated in your application main method. The bootstrapper is the central point of your application's startup and shutdown behavior. 
== Extensions ==
Extensions contain methods which are called upon startup and shutdown of the bootstrapper. The methods of the extensions are extension points which can consume information gathered during the bootstrapping process for example configuration. Extensions are added directly on the bootstrapper.
== Behaviors ==
Behaviors allow extending the bootstrapping process in an aspect oriented style. Behaviors gain access to extensions which are participating in the bootstrapper process and can therefore influence them for example by injecting additional runtime information into an extension.
== Strategy ==
The strategy defines the order of execution for extension points and behaviors. The strategy is also the context provider for context information which needs to be passed to the extension points. The strategy allows to hook in custom executors and reporting context.
== Executors ==
== Configuration Support ==
== Reporting ==