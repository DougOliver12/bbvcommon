#summary Summary of bbv.Common.EventBroker
#labels EventBroker,Featured

== Features ==
  * Synchronous and asynchronous notification
  * Automatic thread switching: to background or UI thread
  * Loose coupling of event topic publishers and subscribers
  * Publishers and subscribers are referenced by weak references. Therefore they can be garbage collected
  * Multiple publishers and/or subscribers for a single event topic
  * Matchers for publications and subscriptions
  * Thorough customizable logging
  * Extension support 

[http://bbvcommon.googlecode.com/svn/wikiFiles/EventBroker/EventBroker.png]

_For a quick introduction see the [EventBrokerTutorial Tutorial]._

== Documentation ==

=== Multithreading ===

A subscriber can specify whether its events are handled synchronously or asynchronously.

A publisher can constrain how its event can be handled (syncronously or asynchronously). This is needed for example in events with results in the event arguments that are evaluated by the publisher after firing the event (-> constraint for synchronous handling).

A subscriber can request an automatic thread switch if needed onto a background thread or the user interfce thread - thus eliminating the need for manual thread switching (no need for Control.Invoke anymore).

An event (or better an event topic) can have multiple publishers and subscribers.

Publishers and subscribers are referenced with weak references which will not prevent them from being garbage collected like in normal event registration model.


=== Loose Coupling ===

The subscriber does not have to know the publisher. Both only need to know the event topic URI (a string identifying the eventtopic uniquely in the system). This facilitates building loosely coupled systems.




== Further Links ==

Performance comparison: http://www.planetgeek.ch/2009/07/12/event-broker-performance/